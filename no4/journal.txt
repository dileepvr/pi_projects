/************************************************/
10/07/17 - Dileep
/************************************************/

Burning raspbian on an a 4GB micro SD HCI card

Instructions on: https://www.raspberrypi.org/documentation/installation/installing-images/

Going for raspbian stretch lite.

Command to copy:

> dd bs=4M if=raspbian-stretch.img of=/dev/sdX status=progress conv=fsync

Mounted boot partition from card and opened config.txt.
Appended the lines:
"
# Enable UART
enable_uart=1
"
to the end of file.

Headless Wifi setup instructions on:

https://core-electronics.com.au/tutorials/raspberry-pi-zerow-headless-wifi-setup.html

Create new file called 'wpa_supplicant.conf' in boot partition.

To enable  wifi, added lines:
"
country=US
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
    ssid="SSID"
    psk="password"
    key_mgmt=WPA-PSK
}
"
to that file, with actual wifi ssid and password going in.
See: https://raspberrypi.stackexchange.com/questions/68808/raspberry-pi-zero-w-keeps-deleting-wpa-supplicant-conf-and-ssh-file

To enable ssh, just create a file named 'ssh' in boot partition.	

The removal of the ssh and wpa_supplicant.conf files on boot is
normal. Once the RPi boots, everything should be persistent and the
network and ssh available on subsequent boots. If you want to keep
copies "just in case", you can create a .zip archive of those files in
/boot and it will not be removed.

To change hostname, mounted remaining partition. Then edited the file
'/etc/hostname', as well as the 127.0.0.1 entry in '/etc/hosts.'

Then I set the home router to statically assign an IP address to the
RPi's mac address.

/************************************************/
10/25/17 - Dileep
/************************************************/

Used raspi-config tool to expand file system.

Disabled HDMI by running /usr/bin/tvservice -o (-p to re-enable). Added the line to /etc/rc.local to disable HDMI on boot.

Installed uptimed from apt-get.

For webserver, also installed lighttpd.
Following advice from: http://www.penguintutor.com/linux/light-webserver

PHP version 5 is outdated. Instead ran:

> sudo apt-get install php7.0-common php7.0-cgi php7.0

Screw sql.

To enable the server to handle php scripts the fastcgi-php module should be enabled by issuing in the command
> sudo lighttpd-enable-mod fastcgi-php
Then reload the server using
> sudo service lighttpd force-reload

Change the directory owner and group
> sudo chown www-data:www-data /var/www
allow the group to write to the directory
> sudo chmod 775 /var/www
Add the pi user to the www-data group
> sudo usermod -a -G www-data pi

Then created index.php in /var/www/html folder with contents:


  <!doctype html>
  <html lang="en">
  <head>
  <meta charset="UTF-8">
  <title>No. 4 internal webpage</title>
  </head>
  <body>
    <h1>Uptime records</h1>
    <?php
       $myoutput = `/usr/bin/uprecords -a -B`;
       echo "<pre>",$myoutput,"</pre>";
       ?>
  </body>
  </html>


Works!
